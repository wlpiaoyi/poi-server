package ##package##.controller;



import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.github.xiaoymin.knife4j.annotations.ApiOperationSupport;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.AllArgsConstructor;
import ##package##.entity.##className##;
import ##package##.service.I##className##Service;
import ##package##.vo.##className##Vo;
import ##package##.ro.##className##Ro;
import ##package##.wrapper.##className##Wrapper;
import tools.com.filling.module.poi.Condition;
import response.tools.com.filling.module.poi.R;
import org.springframework.web.bind.annotation.*;
import org.wlpiaoyi.framework.utils.ValueUtils;

import javax.validation.Valid;


/**
 * {@code @author:} 		##author##
 * {@code @description:} 	##tableComment## 控制器
 * {@code @date:} 			##createTime##
 * {@code @version:}: 		##version##
 */
@RestController
@AllArgsConstructor
@RequestMapping("/##objectName##")
@Api(value = "##tableComment##", tags = "##tableComment##接口")
public class ##className##Controller {

	private final I##className##Service ##varClassName##Service;

	/**
	 * ##tableComment## 详情
	 */
	@GetMapping("/detail")
	@ApiOperationSupport(order = 1)
	@ApiOperation(value = "详情", notes = "传入##className##")
	public R<##className##Vo> detail(##className##Ro.Query body) {
		##className## ##varClassName## = ##className##Wrapper.entityVO(this.##varClassName##Service.getOne(Condition.getQueryWrapper(##className##Wrapper.entity(body))));
		return R.success(##className##Wrapper.entityVO(##varClassName##));
	}

	/**
	 * ##tableComment## 分页
	 */
	@GetMapping("/list")
	@ApiOperationSupport(order = 2)
	@ApiOperation(value = "分页", notes = "传入##className##")
	public R<IPage<##className##Vo>> list(##className##Ro.Query body) {
		LambdaQueryWrapper<##className##> wrapper = Wrappers.<##className##>lambdaQuery();
		IPage<##className##> pages = ##varClassName##Service.page(Condition.getPage(body), wrapper);
		return R.success(##className##Wrapper.pageVO(pages));
	}

//	/**
//	 * ##tableComment## 自定义分页
//	 */
//	@PostMapping("/list")
//	@ApiOperationSupport(order = 3)
//	@ApiOperation(value = "分页", notes = "传入##className##")
//	public R<IPage<##className##Vo>> list(@RequestBody ##className##Ro.Query body) {
//		IPage<##className##Vo> pages = ##varClassName##Service.select##className##Page(Condition.getPage(body), body);
//		return R.data(pages);
//	}

	/**
	 * ##tableComment## 新增
	 */
	@PostMapping("/save")
	@ApiOperationSupport(order = 4)
	@ApiOperation(value = "新增", notes = "传入##className##")
	public R save(@Valid @RequestBody ##className##Ro.Submit body) {
		return R.success(##varClassName##Service.save(##className##Wrapper.entity(body)));
	}

	/**
	 * ##tableComment## 修改
	 */
	@PostMapping("/update")
	@ApiOperationSupport(order = 5)
	@ApiOperation(value = "修改", notes = "传入##className##")
	public R update(@RequestBody ##className##Ro.Submit body) {
		return R.success(##varClassName##Service.updateById(##className##Wrapper.entity(body)));
	}

	/**
	 * ##tableComment## 新增或修改
	 */
	@PostMapping("/submit")
	@ApiOperationSupport(order = 6)
	@ApiOperation(value = "新增或修改", notes = "传入##className##")
	public R submit(@Valid @RequestBody ##className##Ro.Submit body) {
		return R.success(##varClassName##Service.saveOrUpdate(##className##Wrapper.entity(body)));
	}

	/**
	 * ##tableComment## 删除
	 */
	@GetMapping("/remove")
	@ApiOperationSupport(order = 7)
	@ApiOperation(value = "逻辑删除", notes = "传入ids")
	public R remove(@ApiParam(value = "主键集合", required = true) @RequestParam String ids) {
		return R.success(##varClassName##Service.deleteLogic(ValueUtils.toLongList(ids)));
	}

}
